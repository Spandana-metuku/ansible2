---
#ansible Playbook to stop Application Services
- name: Running service stop script
  hosts: linuxserver
  become: yes
  vars:
    scriptFile: /epmcfg/Infra/EpmRestarts/nohup_stopAll_EPM.sh
  tasks:
  - name: stop the app service
    shell: "sh {{ scriptFile }} > /tmp/test.log"

#purpose of this task to check if application is running or stopped
  - name:  verify application/database processes are not running
      shell: if ps -eaf | egrep 'apache|http'|grep -v grep > /dev/null ;then echo 'process_running';else echo 'process_not_running';fi
      ignore_errors: true
      register: app_process_check
# this task is decision,play will fail/quit,if application is running
  - name:  decision point to start patching
     fail: msg="{{ all }} have running Application.Please stop the application first, then attempt patching."
     when: app_process_check.stdout == "process_running"
   
#this task will upgrade/install the rpm's if application is stopped
  - name:  upgrade all packages on the server
     yum:
       name="yum update"
       state=latest
     when: app_process_check.stdout == "process_not_running" and ansible_distribution == 'oracle linux enterprise' or ansible_distribution == 'Red Hat Enterprise Linux'
     register: yum_update
# this task is to check if kernel update happend and system needs reboot or not
  - name: check if reboot required after kernel update.
    shell: KERNEL_NEW=$(rpm -q --last kernel |head -1 | awk '{print $1}' | sed 's/kernel-//'); KERNEL_NOW=$(uname -r); if [[ $KERNEL_NEW != $KERNEL_NOW ]]; then echo "reboot_needed"; else echo "reboot_not_needed"; fi
    ignore_errors: true
    register: reboot_required
#starting services
  - name: Running service start script
      vars:
        scriptFile: /epmcfg/Infra/EpmRestarts/nohup_startAll_EPM.sh
    tasks:
    - name: start the app service
      shell: "sh {{ scriptFiile }} > /tmp/test.log"



